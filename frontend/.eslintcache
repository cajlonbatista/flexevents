[{"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\App.js":"1","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Main\\Main.js":"2","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Header\\Header.js":"3","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Header\\styles.js":"4","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\index.js":"5","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\routes.js":"6","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Create\\Create.js":"7","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Create\\styles.js":"8","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Form\\styles.js":"9","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Form\\Form.js":"10","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Select\\styles.js":"11","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Select\\Select.js":"12","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\store\\steps.js":"13","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Step\\Step.js":"14","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\store\\actions.js":"15","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Main\\styles.js":"16","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\reportWebVitals.js":"17","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Card\\Card.js":"18","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Card\\styles.js":"19","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\themes\\themes.js":"20","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\NotFound\\NotFound.js":"21"},{"size":339,"mtime":1607098440893,"results":"22","hashOfConfig":"23"},{"size":2433,"mtime":1607121267039,"results":"24","hashOfConfig":"23"},{"size":1646,"mtime":1607099500548,"results":"25","hashOfConfig":"23"},{"size":1227,"mtime":1607087789255,"results":"26","hashOfConfig":"23"},{"size":531,"mtime":1607098441029,"results":"27","hashOfConfig":"23"},{"size":485,"mtime":1607169679694,"results":"28","hashOfConfig":"23"},{"size":339,"mtime":1607098441031,"results":"29","hashOfConfig":"23"},{"size":1313,"mtime":1607082634444,"results":"30","hashOfConfig":"23"},{"size":3143,"mtime":1607169024546,"results":"31","hashOfConfig":"23"},{"size":6787,"mtime":1607168962311,"results":"32","hashOfConfig":"23"},{"size":1338,"mtime":1607099717899,"results":"33","hashOfConfig":"23"},{"size":1097,"mtime":1607163853369,"results":"34","hashOfConfig":"23"},{"size":425,"mtime":1607094495363,"results":"35","hashOfConfig":"23"},{"size":429,"mtime":1607098440958,"results":"36","hashOfConfig":"23"},{"size":199,"mtime":1607098441035,"results":"37","hashOfConfig":"23"},{"size":1961,"mtime":1607121296787,"results":"38","hashOfConfig":"23"},{"size":362,"mtime":1607022405770,"results":"39","hashOfConfig":"23"},{"size":10994,"mtime":1607169427827,"results":"40","hashOfConfig":"23"},{"size":1001,"mtime":1607123562912,"results":"41","hashOfConfig":"23"},{"size":848,"mtime":1607163983572,"results":"42","hashOfConfig":"23"},{"size":317,"mtime":1607169592440,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7tcmsk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\App.js",[],["89","90"],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Main\\Main.js",[],["91","92"],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Header\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\index.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\routes.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Create\\Create.js",["93","94"],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Create\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Form\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Form\\Form.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Select\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Select\\Select.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\store\\steps.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Step\\Step.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\store\\actions.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\Main\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Card\\Card.js",["95","96","97","98","99"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Menu, MenuItem, Dialog, AppBar, IconButton, Toolbar, Chip } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport { Close } from '@material-ui/icons';\r\nimport { message, Spin } from 'antd';\r\n\r\nimport moreicon from '../../global/assets/more.svg';\r\nimport addicon from \"../../global/assets/add.svg\";\r\n\r\nimport { FormContainer, FormBox, FormDuoBox, SubmitButton } from '../Form/styles';\r\nimport { poupTheme, chipTheme, dialogTheme } from '../../themes/themes';\r\nimport { CardContainer, DialogContent } from './styles';\r\n\r\nconst Card = (props) => {\r\n\r\n  const {\r\n    data\r\n  } = props;\r\n  var {\r\n    _id,\r\n    title,\r\n    description,\r\n    start,\r\n    type,\r\n    edition,\r\n    address,\r\n    number,\r\n    cep,\r\n    telephone\r\n  } = data;\r\n\r\n  const [endereco, setEndereco] = useState({});\r\n  const [poup, setPoup] = useState(null);\r\n  const [dialog, setDialog] = useState(false);\r\n\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const [rtitle, setTitle] = useState(title);\r\n  const [rdescription, setDescription] = useState(description);\r\n  const [rstart, setStart] = useState(start);\r\n  const [redition, setEdition] = useState(edition);\r\n  const [raddress, setAddress] = useState(address);\r\n  const [rcep, setCep] = useState(cep);\r\n  const [rtelephone, setTelephone] = useState(telephone);\r\n  const [rnumber, setNumber] = useState(number);\r\n  const [tag, setTag] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', `http://cep.la/${cep}`, true);\r\n    xhr.setRequestHeader('Accept', 'application/json');\r\n    xhr.onreadystatechange = function () {\r\n      if ((xhr.readyState == 0 || xhr.readyState == 4) && xhr.status == 200)\r\n        setEndereco(JSON.parse(xhr.responseText));\r\n    }\r\n    xhr.send(null);\r\n  }, []);\r\n\r\n  const poupClose = () => {\r\n    setPoup(null);\r\n  }\r\n\r\n  const poupOpen = (e) => {\r\n    setPoup(e.currentTarget);\r\n  }\r\n\r\n  const dialogClose = () => {\r\n    setDialog(false);\r\n  };\r\n\r\n  const dialogOpen = () => {\r\n    setDialog(true);\r\n  };\r\n\r\n  const addTags = () => {\r\n    var validate = \"\";\r\n    for (const j of tag) {\r\n      if (j !== \" \") {\r\n        validate += j;\r\n      }\r\n    }\r\n    if (validate !== \"\") {\r\n      tags.push(tag.toLocaleLowerCase());\r\n      setTags([...tags]);\r\n      setTag(\"\");\r\n    }\r\n  };\r\n\r\n  const onDestroy = (e) => {\r\n    var url = '';\r\n    if (type === 'online') {\r\n      url = '/api/onevent'\r\n    } else {\r\n      url = '/api/prevent'\r\n    }\r\n    axios.delete(`${process.env.REACT_APP_EVENT}${url}/${_id}`)\r\n      .then(res => {\r\n        message.success('Evento apagado com sucesso !');\r\n        setDeleted(true);\r\n      }).catch(err => {\r\n        message.error('Error ao apagar evento !');\r\n      })\r\n  }\r\n\r\n  const onRefresh = (e) => {\r\n    e.preventDefault();\r\n    var url = '';\r\n    if (type === 'online') {\r\n      url = '/api/onevent'\r\n    } else {\r\n      url = '/api/prevent'\r\n    }\r\n    if (tags.length === 0) {\r\n      message.warn('Adicione as tags !');\r\n    } else {\r\n      setLoading(true);\r\n      axios.put(`${process.env.REACT_APP_EVENT}${url}/${_id}`, {\r\n        title: rtitle,\r\n        start: rstart,\r\n        address: raddress,\r\n        description: rdescription,\r\n        cep: rcep,\r\n        number: rnumber,\r\n        edition: redition,\r\n        telephone: rtelephone,\r\n        status: 'active',\r\n        type,\r\n        tags\r\n      }).then(res => {\r\n        console.log(res.data);\r\n        message.success('Evento editado com sucesso !');\r\n        setLoading(false);\r\n        dialogClose();\r\n        window.location.reload();\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  if (deleted === false) {\r\n    return (\r\n      <CardContainer>\r\n        <header>\r\n          {\r\n            (type === 'online')\r\n              ?\r\n              <div style={{ background: '#31e0ab' }} onClick={poupOpen}>\r\n                <img src={moreicon} width='20px' alt='more' />\r\n              </div>\r\n              :\r\n              <div style={{ background: '#ff5f5f' }} onClick={poupOpen}>\r\n                <img src={moreicon} width='20px' alt='more' />\r\n              </div>\r\n          }\r\n          <span> {new Date(start).toLocaleDateString()} {new Date(start).toLocaleTimeString()}</span>\r\n        </header>\r\n        <article>\r\n          <div>\r\n            <h1>{title}</h1>\r\n            {\r\n              (type === 'online')\r\n                ?\r\n                <p style={{ textTransform: 'capitalize' }} onClick={poupOpen}>\r\n                  {edition}º Edição {type}\r\n                </p>\r\n                :\r\n                <p style={{ textTransform: 'capitalize' }}>\r\n                  {edition}º Edição {type}\r\n                </p>\r\n            }\r\n            <p>Contato: {telephone}</p>\r\n            {\r\n              (type === 'online')\r\n                ?\r\n                <span>Local: <a href={address}>{address}</a></span>\r\n                :\r\n                <span>Local: {(endereco.logradouro == undefined) ? <i>Endereço Inválido</i> : `${endereco.logradouro}, ${endereco.bairro}, ${endereco.cidade}-${endereco.uf}, N ${number}`}</span>\r\n            }\r\n          </div>\r\n          <p>{description}</p>\r\n        </article>\r\n        <ThemeProvider theme={poupTheme}>\r\n          <Menu\r\n            anchorEl={poup}\r\n            keepMounted\r\n            open={Boolean(poup)}\r\n            onClose={poupClose}\r\n          >\r\n            <MenuItem onClick={() => {\r\n              poupClose();\r\n              dialogOpen();\r\n            }} >Editar</MenuItem>\r\n            <MenuItem onClick={() => {\r\n              poupClose();\r\n              onDestroy();\r\n            }} >Apagar</MenuItem>\r\n          </Menu>\r\n        </ThemeProvider>\r\n        <ThemeProvider theme={dialogTheme}>\r\n          <Dialog style={{ zIndex: 13 }} fullScreen open={dialog} onClose={dialogClose}>\r\n            <AppBar style={{boxShadow: \"none\"}}>\r\n              <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={dialogClose} aria-label=\"close\">\r\n                  <Close />\r\n                </IconButton>\r\n            </Toolbar>\r\n            </AppBar>\r\n            <DialogContent>\r\n              <FormContainer>\r\n                <ThemeProvider theme={chipTheme}>\r\n                  <form onSubmit={onRefresh}>\r\n                    <Spin spinning={loading}>\r\n                      <FormBox>\r\n                        <label htmlFor='title'>Título</label>\r\n                        <input required type='text' value={rtitle} name='title' onChange={e => setTitle(e.target.value)} />\r\n                      </FormBox>\r\n                      <FormBox>\r\n                        <label htmlFor='description'>Descrição</label>\r\n                        <textarea required value={rdescription} onChange={e => setDescription(e.target.value)} name='description' />\r\n                      </FormBox>\r\n                      <FormBox>\r\n                        <label htmlFor='edition'>Edição</label>\r\n                        <input required type='number' value={redition} min='1' onChange={e => setEdition(e.target.value)} name='edition' />\r\n                      </FormBox>\r\n                      <FormDuoBox>\r\n                        <div>\r\n                          <label htmlFor='start'>Horário de Início</label>\r\n                          <input required type='datetime-local' value={rstart} onChange={e => setStart(e.target.value)} name='start' />\r\n                        </div>\r\n                        <div>\r\n                          <label htmlFor='telephone'>Telefone</label>\r\n                          <PhoneInput required value={rtelephone} onChange={setTelephone} name='telephone' />\r\n                        </div>\r\n                      </FormDuoBox>\r\n\r\n                      {\r\n                        (type === 'online')\r\n                          ?\r\n                          <FormBox>\r\n                            <label htmlFor='address'>Endereço Online</label>\r\n                            <input required type='text' value={raddress} onChange={e => setAddress(e.target.value)} name='address' />\r\n                          </FormBox>\r\n                          :\r\n                          <FormDuoBox>\r\n                            <div>\r\n                              <label htmlFor='cep'>CEP</label>\r\n                              <input required type='number' min='1' value={rcep} onChange={e => setCep(e.target.value)} name='cep' />\r\n                            </div>\r\n                            <div>\r\n                              <label htmlFor='number'>Número</label>\r\n                              <input required type='number' min='1' value={rnumber} onChange={e => setNumber(e.target.value)} name='number' />\r\n                            </div>\r\n                          </FormDuoBox>\r\n                      }\r\n\r\n                      <section>\r\n                        <article>\r\n                          <label htmlFor=\"tags\">Tags</label>\r\n                          <div>\r\n                            <input\r\n                              name=\"tags\"\r\n                              title=\"Coloque tags para facilitar na busca do evento\"\r\n                              autoComplete=\"off\"\r\n                              value={tag}\r\n                              onKeyDown={e => (e.key === 'Enter') ? addTags : console.log(e)}\r\n                              onChange={(e) => {\r\n                                setTag(e.target.value);\r\n                              }}\r\n                            />\r\n                            <IconButton type='button' title=\"Adicionar tag\" onClick={addTags}>\r\n                              <img src={addicon} alt='Adicionar tag' />\r\n                            </IconButton>\r\n                          </div>\r\n                        </article>\r\n\r\n                        <article>\r\n                          {tags.map((tag) => (\r\n                            <Chip\r\n                              color=\"primary\"\r\n                              onDelete={(e) => {\r\n                                tags.splice(tags.indexOf(tag), 1);\r\n                                setTags([...tags]);\r\n                              }}\r\n                              key={tag}\r\n                              label={tag}\r\n                            />\r\n                          ))}\r\n                        </article>\r\n                      </section>\r\n                      <SubmitButton>Atualizar evento</SubmitButton>\r\n                    </Spin>\r\n                  </form>\r\n                </ThemeProvider>\r\n              </FormContainer>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </ThemeProvider>\r\n      </CardContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <></>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Card;","C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\components\\Card\\styles.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\themes\\themes.js",[],"C:\\Users\\Acer\\Desktop\\yourevent\\frontend\\src\\pages\\NotFound\\NotFound.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":3,"column":20,"nodeType":"108","messageId":"109","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":61,"column":27,"nodeType":"113","messageId":"114","endLine":61,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":61,"column":50,"nodeType":"113","messageId":"114","endLine":61,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":61,"column":70,"nodeType":"113","messageId":"114","endLine":61,"endColumn":72},{"ruleId":"115","severity":1,"message":"116","line":65,"column":6,"nodeType":"117","endLine":65,"endColumn":8,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"112","line":186,"column":52,"nodeType":"113","messageId":"114","endLine":186,"endColumn":54},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cep'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [cep]",{"range":"124","text":"125"},[2040,2042],"[cep]"]